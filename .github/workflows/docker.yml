name: Docker

on:
  workflow_call:
    inputs:
      dockerfile_path:
        description: "Dockerfile path"
        type: string
        required: false
        default: "Dockerfile"

      download_artifact:
        description: "Download artifact?"
        type: boolean
        required: false
        default: false
      download_artifact_name:
        description: "Artifact name to download"
        type: string
        required: false
      download_artifact_path:
        description: "Downloaded artifact path"
        type: string
        required: false

      image_name:
        description: "Image name"
        type: string
        required: true
      image_version:
        description: "Image version"
        type: string
        required: true
      image_artifact_name:
        description: "Image artifact name"
        type: string
        required: false
        default: image

      publish_image_registry:
        description: "Docker registry to publish image"
        type: string
        required: true
    secrets:
      publish_image_registry_token:
        description: "Docker registry token to publish image"
        required: false

jobs:
  build-n-publish-image:
    name: Build and Publish image
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Validate Download Artifact inputs
        if: ${{ inputs.download_artifact }}
        run: |
          if [ -z "${{ inputs.download_artifact_name }}" ] || [ -z "${{ inputs.download_artifact_path }}" ]; then
            echo "Error: download_artifact_name and download_artifact_path inputs are required on enabled download_artifact input."
            exit 1
          fi  

      - uses: actions/checkout@v4
        name: Checkout

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/download-artifact@v4
        name: Download artifact
        if: ${{ inputs.download_artifact }}
        with:
          name: ${{ inputs.download_artifact_name }}
          path: ${{ inputs.download_artifact_path }}

      - name: Build and push multi-arch image
        run: |
          IMAGE_NAME=${{ inputs.image_name }}
          echo "Image Name: $IMAGE_NAME"
          
          IMAGE_VERSION=${{ inputs.image_version }}
          echo "Image Version: $IMAGE_VERSION"

          DOCKER_REGISTRY=${{ inputs.publish_image_registry }}
          echo "Docker Registry: $DOCKER_REGISTRY"
          
          IMAGE_TAG="$DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION"
          IMAGE_TAG=$(echo $IMAGE_TAG | tr '[A-Z]' '[a-z]')
          echo "Image Tag: $IMAGE_TAG"
          
          echo "GitHub run ID: $GITHUB_RUN_ID"

          DOCKERFILE=${{ inputs.dockerfile_path }}
          echo "Dockerfile: $DOCKERFILE"

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file $DOCKERFILE \
            --tag $IMAGE_TAG \
            --label "github_actions_run=$GITHUB_RUN_ID" \
            --push \
            .
